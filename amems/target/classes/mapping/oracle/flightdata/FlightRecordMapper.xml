<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.eray.thjw.flightdata.dao.FlightRecordMapper" >
  <resultMap id="BaseResultMap" type="com.eray.thjw.flightdata.po.FlightRecord" >
  
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="FXJLDID" property="fxjldid" jdbcType="VARCHAR" />
    <result column="HC" property="hc" jdbcType="INTEGER" />
    <result column="HCMS" property="hcms" jdbcType="VARCHAR" />
    <result column="XDBS" property="xdbs" jdbcType="INTEGER" />
    <result column="FXSJ_XS" property="fxsjXs" jdbcType="INTEGER" />
    <result column="FXSJ_FZ" property="fxsjFz" jdbcType="INTEGER" />
    <result column="F1SJ_XS" property="f1sjXs" jdbcType="INTEGER" />
    <result column="F1SJ_FZ" property="f1sjFz" jdbcType="INTEGER" />
    <result column="F2SJ_XS" property="f2sjXs" jdbcType="INTEGER" />
    <result column="F2SJ_FZ" property="f2sjFz" jdbcType="INTEGER" />
    <result column="QLJXH" property="qljxh" jdbcType="DECIMAL" />
    <result column="JCSJ_XS" property="jcsjXs" jdbcType="INTEGER" />
    <result column="JCSJ_FZ" property="jcsjFz" jdbcType="INTEGER" />
    <result column="JCXH" property="jcxh" jdbcType="DECIMAL" />
    <result column="YL_FXQ" property="ylFxq" jdbcType="DECIMAL" />
    <result column="YL_FXH" property="ylFxh" jdbcType="DECIMAL" />
    <result column="F1_N1" property="f1N1" jdbcType="DECIMAL" />
    <result column="F1_N2" property="f1N2" jdbcType="DECIMAL" />
    <result column="F1_N3" property="f1N3" jdbcType="DECIMAL" />
    <result column="F1_N4" property="f1N4" jdbcType="DECIMAL" />
    <result column="F1_N5" property="f1N5" jdbcType="DECIMAL" />
    <result column="F1_N6" property="f1N6" jdbcType="DECIMAL" />
    <result column="F1_HY" property="f1Hy" jdbcType="DECIMAL" />
    <result column="F1_WDYD" property="f1Wdyd" jdbcType="DECIMAL" />
    <result column="F1_GLYD" property="f1Glyd" jdbcType="DECIMAL" />
    <result column="F2_N1" property="f2N1" jdbcType="DECIMAL" />
    <result column="F2_N2" property="f2N2" jdbcType="DECIMAL" />
    <result column="F2_N3" property="f2N3" jdbcType="DECIMAL" />
    <result column="F2_N4" property="f2N4" jdbcType="DECIMAL" />
    <result column="F2_N5" property="f2N5" jdbcType="DECIMAL" />
    <result column="F2_N6" property="f2N6" jdbcType="DECIMAL" />
    <result column="F2_HY" property="f2Hy" jdbcType="DECIMAL" />
    <result column="F2_WDYD" property="f2Wdyd" jdbcType="DECIMAL" />
    <result column="F2_GLYD" property="f2Glyd" jdbcType="DECIMAL" />
    <result column="SSDSJ_XS" property="ssdsjXs" jdbcType="INTEGER" />
    <result column="SSDSJ_FZ" property="ssdsjFz" jdbcType="INTEGER" />
    <result column="DGXH" property="dgxh" jdbcType="DECIMAL" />
    <result column="TS1" property="ts1" jdbcType="DECIMAL" />
    <result column="TS2" property="ts2" jdbcType="DECIMAL" />
    <result column="MGB" property="mgb" jdbcType="DECIMAL" />
    <result column="IGB" property="igb" jdbcType="DECIMAL" />
    <result column="TGB" property="tgb" jdbcType="DECIMAL" />
    <result column="TSFXPZID" property="tsfxpzid" jdbcType="VARCHAR" />
    <result column="ZT" property="zt" jdbcType="INTEGER" />
    <result column="WHDWID" property="whdwid" jdbcType="VARCHAR" />
    <result column="WHRID" property="whrid" jdbcType="VARCHAR" />
    <result column="WHSJ" property="whsj" jdbcType="TIMESTAMP" />
    <result column="DPRTCODE" property="dprtcode" jdbcType="VARCHAR" />
    <result column="BZ" property="bz" jdbcType="VARCHAR" />
    <result column="JH_F1" property="jhF1" jdbcType="VARCHAR" />
    <result column="XLH_F1" property="xlhF1" jdbcType="VARCHAR" />
    <result column="JH_F2" property="jhF2" jdbcType="VARCHAR" />
    <result column="XLH_F2" property="xlhF2" jdbcType="VARCHAR" />
    <result column="JH_JC" property="jhJc" jdbcType="VARCHAR" />
    <result column="XLH_JC" property="xlhJc" jdbcType="VARCHAR" />
    <result column="JH_WDG" property="jhWdg" jdbcType="VARCHAR" />
    <result column="XLH_WDG" property="xlhWdg" jdbcType="VARCHAR" />
    <result column="JH_SSD" property="jhSsd" jdbcType="VARCHAR" />
    <result column="XLH_SSD" property="xlhSsd" jdbcType="VARCHAR" />
    
    
    <result column="fxsj_qljxh_z" property="fxsjQljxhZ" jdbcType="VARCHAR" />
    
    <result column="ssdsj_z" property="ssdsjZ" jdbcType="VARCHAR" />
    <result column="dgxh_z" property="dgxhZ" jdbcType="VARCHAR" />
    <result column="jcxh_z" property="jcxhZ" jdbcType="VARCHAR" />
    <result column="jcsj_z" property="jcsjZ" jdbcType="VARCHAR" />
    <result column="f1_sj_n16_z" property="f1SjN16Z" jdbcType="VARCHAR" />
    <result column="f2_sj_n16_z" property="f2SjN16Z" jdbcType="VARCHAR" />
    
    <result column="fjzch" property="fjzch" jdbcType="VARCHAR" />
    <result column="fxDateBegin" property="fxDateBegin" jdbcType="VARCHAR" />
    <result column="fxDateEnd" property="fxDateEnd" jdbcType="VARCHAR" />
    <result column="jlbym" property="jlbym" jdbcType="VARCHAR" />
    <result column="zdjsyy" property="zdjsyy" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    ID, FXJLDID, HC, HCMS, XDBS, FXSJ_XS, FXSJ_FZ, F1SJ_XS, F1SJ_FZ, F2SJ_XS, F2SJ_FZ, 
    QLJXH, JCSJ_XS, JCSJ_FZ, JCXH, YL_FXQ, YL_FXH, F1_N1, F1_N2, F1_N3, F1_N4, F1_N5, 
    F1_N6, F1_HY, F1_WDYD, F1_GLYD, F2_N1, F2_N2, F2_N3, F2_N4, F2_N5, F2_N6, F2_HY, 
    F2_WDYD, F2_GLYD, SSDSJ_XS, SSDSJ_FZ, DGXH, TS1, TS2, MGB, IGB, TGB, TSFXPZID, ZT, 
    WHDWID, WHRID, WHSJ, DPRTCODE, BZ, JH_F1, XLH_F1, JH_F2, XLH_F2, JH_JC, XLH_JC, JH_WDG, 
    XLH_WDG, JH_SSD, XLH_SSD
  </sql>
 
	<select id="queryAllPageList" resultMap="BaseResultMap">
select b2.dprtcode, 
       b2.zt, 
       b2.zdjsyy,
       b2.jlbym, 
       b2.fxjldh, 
       b2.fxrq, 
       b1.hcms,
       b2.fjzch, 
       (CASE WHEN b1.fxsj_xs IS NULL THEN 0 ELSE b1.fxsj_xs END) || ':' || (CASE WHEN b1.fxsj_fz IS NULL THEN 0 ELSE b1.fxsj_fz END) fxsj, 
         (select ((sum(t1.fxsj_xs) + (CASE WHEN init_time_jsfx_xs IS NULL THEN '0' ELSE init_time_jsfx_xs END)) || ':' ||
               (sum(t1.fxsj_fz) + (CASE WHEN init_time_jsfx_fz IS NULL THEN '0' ELSE init_time_jsfx_fz END)) || '`' ||
               (sum(t1.qljxh) + (CASE WHEN init_loop_qlj IS NULL THEN '0' ELSE init_loop_qlj END))) fxsj_qljxh_z
          from b_s_00601 t1
          join b_s_006 t2
            on t2.id = t1.fxjldid
            and t1.zt = 1
		   and t1.xdbs = 0
         where t2.fjzch = b2.fjzch
           and t2.dprtcode = b2.dprtcode
           and ((t2.fxrq &lt; b2.fxrq) or
               (t2.fxrq = b2.fxrq and t2.zdsj &lt; b2.zdsj) or
               (t2.zdsj = b2.zdsj and t1.hc &lt;= b1.hc))
           and t2.zt in (2, 12, 99)) fxsj_qljxh_z, 
       (CASE WHEN b1.yl_fxq IS NULL THEN 0 ELSE b1.yl_fxq END) - (CASE WHEN b1.yl_fxh IS NULL THEN 0 ELSE b1.yl_fxh END) yl, 
       b1.qljxh, 
       b1.jh_jc, 
       b1.xlh_jc, 
       (CASE WHEN b1.jcsj_xs IS NULL THEN 0 ELSE b1.jcsj_xs END) || ':' || (CASE WHEN b1.jcsj_fz IS NULL THEN 0 ELSE b1.jcsj_fz END) jcsj, 
       (select sum(jcsj_xs) || ':' || sum(jcsj_fz) jcsj_z
          from b_h_01001
         where b_h_01001.is_cyjs = 1
           and b_h_01001.zt = 1
           and b_h_01001.xdbs = 0
           and b_h_01001.dprtcode = b2.dprtcode
           and ((b_h_01001.fxrq &lt; b2.fxrq) or
               (b_h_01001.fxrq = b2.fxrq and b_h_01001.fxjldcjsj &lt; b2.zdsj) or
               (b_h_01001.fxjldcjsj = b2.zdsj and b_h_01001.hc &lt;= b1.hc) or
               csbj in (1, 2))
           and b_h_01001.jh = b1.jh_jc
           and b_h_01001.xlh = b1.xlh_jc) jcsj_z, 
       b1.jh_ssd, 
       b1.xlh_ssd, 
       (CASE WHEN b1.ssdsj_xs IS NULL THEN 0 ELSE b1.ssdsj_xs END) || ':' || (CASE WHEN b1.ssdsj_fz IS NULL THEN 0 ELSE b1.ssdsj_fz END) ssdsj, 
       (select sum(ssdsj_xs) || ':' || sum(ssdsj_fz) ssdsj_z
          from b_h_01001
         where b_h_01001.is_cyjs = 1
           and b_h_01001.zt = 1
           and b_h_01001.xdbs = 0
           and b_h_01001.dprtcode = b2.dprtcode
           and ((b_h_01001.fxrq &lt; b2.fxrq) or
               (b_h_01001.fxrq = b2.fxrq and b_h_01001.fxjldcjsj &lt; b2.zdsj) or
               (b_h_01001.fxjldcjsj = b2.zdsj and b_h_01001.hc &lt;= b1.hc) or
               csbj in (1, 2))
           and b_h_01001.jh = b1.jh_ssd
           and b_h_01001.xlh = b1.xlh_ssd) ssdsj_z, 
       b1.jh_wdg, 
       b1.xlh_wdg, 
       b1.dgxh, 
       (select sum((CASE WHEN dgxh IS NULL THEN 0 ELSE dgxh END)) dgxh_z
          from b_h_01001
         where b_h_01001.is_cyjs = 1
           and b_h_01001.zt = 1
           and b_h_01001.xdbs = 0
           and b_h_01001.dprtcode = b2.dprtcode
           and ((b_h_01001.fxrq &lt; b2.fxrq) or
               (b_h_01001.fxrq = b2.fxrq and b_h_01001.fxjldcjsj &lt; b2.zdsj) or
               (b_h_01001.fxjldcjsj = b2.zdsj and b_h_01001.hc &lt;= b1.hc) or
               csbj in (1, 2))
           and b_h_01001.jh = b1.jh_wdg
           and b_h_01001.xlh = b1.xlh_wdg) dgxh_z, 
       b1.jcxh, 
       (select sum((CASE WHEN jcxh IS NULL THEN 0 ELSE jcxh END)) jcxh_z
          from b_h_01001
         where b_h_01001.is_cyjs = 1
           and b_h_01001.zt = 1
           and b_h_01001.xdbs = 0
           and b_h_01001.dprtcode = b2.dprtcode
           and ((b_h_01001.fxrq &lt; b2.fxrq) or
               (b_h_01001.fxrq = b2.fxrq and b_h_01001.fxjldcjsj &lt; b2.zdsj) or
               (b_h_01001.fxjldcjsj = b2.zdsj and b_h_01001.hc &lt;= b1.hc) or
               csbj in (1, 2))
           and b_h_01001.jh = b1.jh_jc
           and b_h_01001.xlh = b1.xlh_jc) jcxh_z, 
       b1.jh_f1, 
       b1.xlh_f1, 
       (select sum(b_h_01001.fsj_xs) || ':' || sum(b_h_01001.fsj_fz) || '`' ||
               sum(b_h_01001.fdj_n1) || '`' || sum(b_h_01001.fdj_n2) || '`' ||
               sum(b_h_01001.fdj_n3) || '`' || sum(b_h_01001.fdj_n4) || '`' ||
               sum(b_h_01001.fdj_n5) || '`' || sum(b_h_01001.fdj_n6) f1_sj_n16_z
          from b_h_01001
         where b_h_01001.is_cyjs = 1
           and b_h_01001.zt = 1
           and b_h_01001.xdbs = 0
           and b_h_01001.dprtcode = b2.dprtcode
           and ((b_h_01001.fxrq &lt; b2.fxrq) or
               (b_h_01001.fxrq = b2.fxrq and b_h_01001.fxjldcjsj &lt; b2.zdsj) or
               (b_h_01001.fxjldcjsj = b2.zdsj and b_h_01001.hc &lt;= b1.hc) or
               csbj in (1, 2))
           and b_h_01001.jh = b1.jh_f1
           and b_h_01001.xlh = b1.xlh_f1) f1_sj_n16_z, 
       b1.f1_hy,
       b1.f1_wdyd, 
       b1.f1_glyd, 
       b1.f1_n1, 
       b1.f1_n2,
       b1.f1_n3, 
       b1.f1_n4, 
       b1.f1_n5, 
       b1.f1_n6, 
       b1.jh_f2, 
       b1.xlh_f2, 
       (select sum(b_h_01001.fsj_xs) || ':' || sum(b_h_01001.fsj_fz) || '`' ||
               sum(b_h_01001.fdj_n1) || '`' || sum(b_h_01001.fdj_n2) || '`' ||
               sum(b_h_01001.fdj_n3) || '`' || sum(b_h_01001.fdj_n4) || '`' ||
               sum(b_h_01001.fdj_n5) || '`' || sum(b_h_01001.fdj_n6) f2_sj_n16_z
          from b_h_01001
         where b_h_01001.is_cyjs = 1
           and b_h_01001.zt = 1
           and b_h_01001.xdbs = 0
           and b_h_01001.dprtcode = b2.dprtcode
           and ((b_h_01001.fxrq &lt; b2.fxrq) or
               (b_h_01001.fxrq = b2.fxrq and b_h_01001.fxjldcjsj &lt; b2.zdsj) or
               (b_h_01001.fxjldcjsj = b2.zdsj and b_h_01001.hc &lt;= b1.hc) or
               csbj in (1, 2))
           and b_h_01001.jh = b1.jh_f2
           and b_h_01001.xlh = b1.xlh_f2) f2_sj_n16_z, 
       b1.f2_hy, 
       b1.f2_wdyd, 
       b1.f2_glyd, 
       b1.f2_n1, 
       b1.f2_n2, 
       b1.f2_n3, 
       b1.f2_n4, 
       b1.f2_n5, 
       b1.f2_n6, 
       b1.ts1, 
       b1.ts2,
       b3.ms  tsqk 
  from b_s_00601 b1
  join b_s_006 b2
    on b1.fxjldid = b2.id
   and b2.zt in (2, 11, 12, 99)
   and b1.zt = 1
   and b1.xdbs = 0
  left join b_s_002 b3
    on b1.tsfxpzid = b3.id
    
      left join (select fjzch,dprtcode,
                    CASE
                      WHEN INSTR(init_time_jsfx, ':') &gt; 0 THEN
                       SUBSTR(init_time_jsfx,
                              0,
                              INSTR(init_time_jsfx, ':') - 1)
                      WHEN INSTR(init_time_jsfx, '.') &gt; 0 THEN
                       SUBSTR(init_time_jsfx,
                              0,
                              INSTR(init_time_jsfx, '.') - 1)
                      ELSE
                       init_time_jsfx
                    END init_time_jsfx_xs,
                    CASE
                      WHEN INSTR(init_time_jsfx, ':') &gt; 0 THEN
                       SUBSTR(init_time_jsfx,
                              INSTR(init_time_jsfx, ':') + 1,
                              length(init_time_jsfx))
                      WHEN INSTR(init_time_jsfx, '.') &gt; 0 THEN
                       SUBSTR(init_time_jsfx,
                              INSTR(init_time_jsfx, '.') + 1,
                              length(init_time_jsfx))
                      ELSE
                       '0'
                    END init_time_jsfx_fz,
                    init_time_jsfx,
                    init_loop_qlj,
                    init_loop_ts1,
                    init_loop_ts2
               from (select d_00701.fjzch, d_00701.dprtcode,
                            max(case init_xmbh
                                  when 'init_time_jsfx' then
                                   init_value
                                  else
                                   null
                                end) init_time_jsfx,
                            max(case init_xmbh
                                  when 'init_loop_qlj' then
                                   init_value
                                  else
                                   null
                                end) init_loop_qlj,
                            max(case init_xmbh
                                  when 'init_loop_ts1' then
                                   init_value
                                  else
                                   null
                                end) init_loop_ts1,
                            max(case init_xmbh
                                  when 'init_loop_ts2' then
                                   init_value
                                  else
                                   null
                                end) init_loop_ts2
                       from d_00701
                       where d_00701.init_xmbh in
                            ('init_time_jsfx',
                             'init_loop_qlj',
                             'init_loop_ts1',
                              'init_loop_ts2')
                   group by d_00701.fjzch,d_00701.dprtcode)) b4
    			on b4.fjzch = b2.fjzch AND b4.dprtcode = b2.dprtcode
                  <include refid="FlightRecordParam"></include>
   		  		<choose>
			    	<when test='pagination.sort == "auto"'>
			    		 order by b2.fxrq desc, b2.zdsj desc, b1.hc desc
			    	</when>
			    	<otherwise>
					    order by ${pagination.sort} ${pagination.order}
			    	</otherwise>
		 	</choose>
	</select>
 
	<!-- 搜索参数 -->
	<sql id="FlightRecordParam">
	   where 1=1
	   
         <if test="fjzch != null">
             and b2.fjzch =  #{fjzch}
         </if>
         <if test="dprtcode != null and dprtcode != ''">
             and b2.dprtcode =  #{dprtcode}
         </if>
          <if test="zt != null and zt != ''">
             and b2.zt =  #{zt}
         </if>
        <if test="fxDateBegin != null and fxDateBegin != ''">
		    and b2.fxrq &gt;=to_date(#{fxDateBegin}||' 00:00:00','YYYY-MM-DD HH24:MI:SS') 
		</if>
         <if test="fxDateEnd != null and fxDateEnd != ''">
		    and b2.fxrq &lt;=to_date(#{fxDateEnd}||' 23:59:59','YYYY-MM-DD HH24:MI:SS') 
		</if>
         <if test="keyword != null and keyword != ''">
		      and (lower(jlbym) like lower('%'||#{keyword}||'%')
		    	or lower(b1.xlh_ssd) like lower('%'||#{keyword}||'%')
		    	or lower(b1.xlh_wdg) like lower('%'||#{keyword}||'%')
		    	or lower(b1.xlh_jc) like lower('%'||#{keyword}||'%')
		    	or lower(b1.xlh_f1) like lower('%'||#{keyword}||'%')
		    	or lower(b1.xlh_f2) like lower('%'||#{keyword}||'%')
		        or lower(b3.ms) like lower('%'||#{keyword}||'%' )   )           <!-- 左右匹配 查询关键字 -->
		  </if>
		   <!-- 前台条件：飞机，机型，sql需要全部的范围，以及带上当前记录的机构码 -->
    	  <choose>                                                                 
		    	<when test='paramsMap.userType!=null and paramsMap.userType == "admin"'>                       
		    		 AND exists 
		    		( SELECT 1 from D_007 where 
		    		b1.fjzch = FJZCH
		    		AND b1.dprtcode = DPRTCODE
		    		AND zt = 1
		    		)
		    	</when>
		    	<when test='paramsMap.userType != "admin" and paramsMap.userId != null and paramsMap.userId !=""'>                       
		    		
		    	</when>
	   	</choose>
	</sql>
	
	<!-- 插入或更新 -->
    <insert id="save" parameterType="com.eray.thjw.flightdata.po.FlightRecord" >
		  MERGE INTO B_S_00601 b1
			USING (SELECT #{id,jdbcType=VARCHAR} AS ID ,
						  #{fxjldid,jdbcType=VARCHAR} AS FXJLDID,
					      #{hc,jdbcType=DECIMAL} AS HC,
					      #{hcms,jdbcType=VARCHAR} AS HCMS,
					      #{xdbs,jdbcType=DECIMAL} AS XDBS,
					      #{tbbs,jdbcType=VARCHAR} AS TBBS,
					      #{fxsjXs,jdbcType=DECIMAL} AS FXSJ_XS,
					      #{fxsjFz,jdbcType=DECIMAL} AS FXSJ_FZ,
					      #{f1sjXs,jdbcType=DECIMAL} AS F1SJ_XS,
					      #{f1sjFz,jdbcType=DECIMAL} AS F1SJ_FZ,
					      #{f2sjXs,jdbcType=DECIMAL} AS F2SJ_XS,
					      #{f2sjFz,jdbcType=DECIMAL} AS F2SJ_FZ,
					      #{qljxh,jdbcType=DECIMAL} AS QLJXH,
					      #{jcsjXs,jdbcType=DECIMAL} AS JCSJ_XS,
					      #{jcsjFz,jdbcType=DECIMAL} AS JCSJ_FZ,
					      #{jcxh,jdbcType=DECIMAL} AS JCXH,
					      #{ylFxq,jdbcType=DECIMAL} AS YL_FXQ,
					      #{ylFxh,jdbcType=DECIMAL} AS YL_FXH,
					      #{f1N1,jdbcType=DECIMAL} AS F1_N1,
					      #{f1N2,jdbcType=DECIMAL} AS F1_N2,
					      #{f1N3,jdbcType=DECIMAL} AS F1_N3,
					      #{f1N4,jdbcType=DECIMAL} AS F1_N4,
					      #{f1N5,jdbcType=DECIMAL} AS F1_N5,
					      #{f1N6,jdbcType=DECIMAL} AS F1_N6,
					      #{f1Hy,jdbcType=DECIMAL} AS F1_HY,
					      #{f1Wdyd,jdbcType=DECIMAL} AS F1_WDYD,
					      #{f1Glyd,jdbcType=DECIMAL} AS F1_GLYD,
					      #{f2N1,jdbcType=DECIMAL} AS F2_N1,
					      #{f2N2,jdbcType=DECIMAL} AS F2_N2,
					      #{f2N3,jdbcType=DECIMAL} AS F2_N3,
					      #{f2N4,jdbcType=DECIMAL} AS F2_N4,
					      #{f2N5,jdbcType=DECIMAL} AS F2_N5,
					      #{f2N6,jdbcType=DECIMAL} AS F2_N6,
					      #{f2Hy,jdbcType=DECIMAL} AS F2_HY,
					      #{f2Wdyd,jdbcType=DECIMAL} AS F2_WDYD,
					      #{f2Glyd,jdbcType=DECIMAL} AS F2_GLYD,
					      #{ssdsjXs,jdbcType=DECIMAL} AS SSDSJ_XS,
					      #{ssdsjFz,jdbcType=DECIMAL} AS SSDSJ_FZ,
					      #{dgxh,jdbcType=DECIMAL} AS DGXH,
					      #{ts1,jdbcType=DECIMAL} AS TS1,
					      #{ts2,jdbcType=DECIMAL} AS TS2,
					      #{mgb,jdbcType=DECIMAL} AS MGB,
					      #{igb,jdbcType=DECIMAL} AS IGB,
					      #{tgb,jdbcType=DECIMAL} AS TGB,
					      #{tsfxpzid,jdbcType=VARCHAR} AS TSFXPZID,
					      #{zt,jdbcType=DECIMAL} AS ZT,
					      #{whdwid,jdbcType=VARCHAR} AS WHDWID,
					      #{whrid,jdbcType=VARCHAR} AS WHRID,
					      #{whsj,jdbcType=TIMESTAMP} AS WHSJ,
					      #{dprtcode,jdbcType=VARCHAR} AS DPRTCODE,
					      #{bz,jdbcType=VARCHAR} AS BZ,
					      #{jhF1,jdbcType=VARCHAR} AS JH_F1,
					      #{xlhF1,jdbcType=VARCHAR} AS XLH_F1,
					      #{jhF2,jdbcType=VARCHAR} AS JH_F2,
					      #{xlhF2,jdbcType=VARCHAR} AS XLH_F2,
					      #{jhJc,jdbcType=VARCHAR} AS JH_JC,
					      #{xlhJc,jdbcType=VARCHAR} AS XLH_JC,
					      #{jhWdg,jdbcType=VARCHAR} AS JH_WDG,
					      #{xlhWdg,jdbcType=VARCHAR} AS XLH_WDG,
					      #{jhSsd,jdbcType=VARCHAR} AS JH_SSD,
					      #{xlhSsd,jdbcType=VARCHAR} AS XLH_SSD,
					      #{avFxr,jdbcType=VARCHAR} AS AV_FXR,
					      #{avZzh,jdbcType=VARCHAR} AS AV_ZZH,
					      #{meFxr,jdbcType=VARCHAR} AS ME_FXR,
					      #{meZzh,jdbcType=VARCHAR} AS ME_ZZH,
					      #{jzshrk,jdbcType=VARCHAR} AS JZSHRK
			FROM dual) b2
			ON ( b1.ID=b2.ID)
			WHEN MATCHED THEN
			  UPDATE SET FXJLDID = #{fxjldid,jdbcType=VARCHAR},
						      HC = #{hc,jdbcType=DECIMAL},
						      HCMS = #{hcms,jdbcType=VARCHAR},
						      XDBS = #{xdbs,jdbcType=DECIMAL},
						      TBBS = #{tbbs,jdbcType=DECIMAL},
						      FXSJ_XS = #{fxsjXs,jdbcType=DECIMAL},
						      FXSJ_FZ = #{fxsjFz,jdbcType=DECIMAL},
						      F1SJ_XS = #{f1sjXs,jdbcType=DECIMAL},
						      F1SJ_FZ = #{f1sjFz,jdbcType=DECIMAL},
						      F2SJ_XS = #{f2sjXs,jdbcType=DECIMAL},
						      F2SJ_FZ = #{f2sjFz,jdbcType=DECIMAL},
						      QLJXH = #{qljxh,jdbcType=DECIMAL},
						      JCSJ_XS = #{jcsjXs,jdbcType=DECIMAL},
						      JCSJ_FZ = #{jcsjFz,jdbcType=DECIMAL},
						      JCXH = #{jcxh,jdbcType=DECIMAL},
						      YL_FXQ = #{ylFxq,jdbcType=DECIMAL},
						      YL_FXH = #{ylFxh,jdbcType=DECIMAL},
						      F1_N1 = #{f1N1,jdbcType=DECIMAL},
						      F1_N2 = #{f1N2,jdbcType=DECIMAL},
						      F1_N3 = #{f1N3,jdbcType=DECIMAL},
						      F1_N4 = #{f1N4,jdbcType=DECIMAL},
						      F1_N5 = #{f1N5,jdbcType=DECIMAL},
						      F1_N6 = #{f1N6,jdbcType=DECIMAL},
						      F1_HY = #{f1Hy,jdbcType=DECIMAL},
						      F1_WDYD = #{f1Wdyd,jdbcType=DECIMAL},
						      F1_GLYD = #{f1Glyd,jdbcType=DECIMAL},
						      F2_N1 = #{f2N1,jdbcType=DECIMAL},
						      F2_N2 = #{f2N2,jdbcType=DECIMAL},
						      F2_N3 = #{f2N3,jdbcType=DECIMAL},
						      F2_N4 = #{f2N4,jdbcType=DECIMAL},
						      F2_N5 = #{f2N5,jdbcType=DECIMAL},
						      F2_N6 = #{f2N6,jdbcType=DECIMAL},
						      F2_HY = #{f2Hy,jdbcType=DECIMAL},
						      F2_WDYD = #{f2Wdyd,jdbcType=DECIMAL},
						      F2_GLYD = #{f2Glyd,jdbcType=DECIMAL},
						      SSDSJ_XS = #{ssdsjXs,jdbcType=DECIMAL},
						      SSDSJ_FZ = #{ssdsjFz,jdbcType=DECIMAL},
						      DGXH = #{dgxh,jdbcType=DECIMAL},
						      TS1 = #{ts1,jdbcType=DECIMAL},
						      TS2 = #{ts2,jdbcType=DECIMAL},
						      MGB = #{mgb,jdbcType=DECIMAL},
						      IGB = #{igb,jdbcType=DECIMAL},
						      TGB = #{tgb,jdbcType=DECIMAL},
						      TSFXPZID = #{tsfxpzid,jdbcType=VARCHAR},
						      ZT = #{zt,jdbcType=DECIMAL},
						      WHDWID = #{whdwid,jdbcType=VARCHAR},
						      WHRID = #{whrid,jdbcType=VARCHAR},
						      WHSJ = #{whsj,jdbcType=TIMESTAMP},
						      BZ = #{bz,jdbcType=VARCHAR},
						      JH_F1 = #{jhF1,jdbcType=VARCHAR},
						      XLH_F1 = #{xlhF1,jdbcType=VARCHAR},
						      JH_F2 = #{jhF2,jdbcType=VARCHAR},
						      XLH_F2 = #{xlhF2,jdbcType=VARCHAR},
						      JH_JC = #{jhJc,jdbcType=VARCHAR},
						      XLH_JC = #{xlhJc,jdbcType=VARCHAR},
						      JH_WDG = #{jhWdg,jdbcType=VARCHAR},
						      XLH_WDG = #{xlhWdg,jdbcType=VARCHAR},
						      JH_SSD = #{jhSsd,jdbcType=VARCHAR},
						      XLH_SSD = #{xlhSsd,jdbcType=VARCHAR},
						      AV_FXR = #{avFxr,jdbcType=VARCHAR},
						      AV_ZZH = #{avZzh,jdbcType=VARCHAR},
						      ME_FXR = #{meFxr,jdbcType=VARCHAR},
						      ME_ZZH = #{meZzh,jdbcType=VARCHAR},
						      JZSHRK = #{jzshrk,jdbcType=VARCHAR}
			WHEN NOT MATCHED THEN 
			  INSERT (ID, FXJLDID, HC, HCMS, XDBS, TBBS, FXSJ_XS, FXSJ_FZ, F1SJ_XS, F1SJ_FZ, F2SJ_XS, F2SJ_FZ, QLJXH, 
			      JCSJ_XS, JCSJ_FZ, JCXH, YL_FXQ, YL_FXH, F1_N1, F1_N2, F1_N3, F1_N4, F1_N5, F1_N6, F1_HY, F1_WDYD, 
			      F1_GLYD, F2_N1, F2_N2, F2_N3, F2_N4, F2_N5, F2_N6, F2_HY, F2_WDYD, F2_GLYD, SSDSJ_XS, SSDSJ_FZ, DGXH, 
			      TS1, TS2, MGB, IGB, TGB, TSFXPZID, ZT, WHDWID, WHRID, WHSJ, DPRTCODE, BZ, JH_F1, XLH_F1, JH_F2, XLH_F2, 
			      JH_JC, XLH_JC, JH_WDG, XLH_WDG, JH_SSD, XLH_SSD, AV_FXR, AV_ZZH, ME_FXR, ME_ZZH, JZSHRK) 
			  VALUES (#{id,jdbcType=VARCHAR}, #{fxjldid,jdbcType=VARCHAR}, #{hc,jdbcType=DECIMAL}, 
			      #{hcms,jdbcType=VARCHAR}, #{xdbs,jdbcType=DECIMAL}, #{tbbs,jdbcType=DECIMAL}, #{fxsjXs,jdbcType=DECIMAL}, 
			      #{fxsjFz,jdbcType=DECIMAL}, #{f1sjXs,jdbcType=DECIMAL}, #{f1sjFz,jdbcType=DECIMAL}, 
			      #{f2sjXs,jdbcType=DECIMAL}, #{f2sjFz,jdbcType=DECIMAL}, #{qljxh,jdbcType=DECIMAL}, 
			      #{jcsjXs,jdbcType=DECIMAL}, #{jcsjFz,jdbcType=DECIMAL}, #{jcxh,jdbcType=DECIMAL}, 
			      #{ylFxq,jdbcType=DECIMAL}, #{ylFxh,jdbcType=DECIMAL}, #{f1N1,jdbcType=DECIMAL}, 
			      #{f1N2,jdbcType=DECIMAL}, #{f1N3,jdbcType=DECIMAL}, #{f1N4,jdbcType=DECIMAL}, #{f1N5,jdbcType=DECIMAL}, 
			      #{f1N6,jdbcType=DECIMAL}, #{f1Hy,jdbcType=DECIMAL}, #{f1Wdyd,jdbcType=DECIMAL}, 
			      #{f1Glyd,jdbcType=DECIMAL}, #{f2N1,jdbcType=DECIMAL}, #{f2N2,jdbcType=DECIMAL}, 
			      #{f2N3,jdbcType=DECIMAL}, #{f2N4,jdbcType=DECIMAL}, #{f2N5,jdbcType=DECIMAL}, #{f2N6,jdbcType=DECIMAL}, 
			      #{f2Hy,jdbcType=DECIMAL}, #{f2Wdyd,jdbcType=DECIMAL}, #{f2Glyd,jdbcType=DECIMAL}, 
			      #{ssdsjXs,jdbcType=DECIMAL}, #{ssdsjFz,jdbcType=DECIMAL}, #{dgxh,jdbcType=DECIMAL}, 
			      #{ts1,jdbcType=DECIMAL}, #{ts2,jdbcType=DECIMAL}, #{mgb,jdbcType=DECIMAL}, #{igb,jdbcType=DECIMAL}, 
			      #{tgb,jdbcType=DECIMAL}, #{tsfxpzid,jdbcType=VARCHAR}, #{zt,jdbcType=DECIMAL}, 
			      #{whdwid,jdbcType=VARCHAR}, #{whrid,jdbcType=VARCHAR}, #{whsj,jdbcType=TIMESTAMP}, 
			      #{dprtcode,jdbcType=VARCHAR}, #{bz,jdbcType=VARCHAR}, #{jhF1,jdbcType=VARCHAR}, 
			      #{xlhF1,jdbcType=VARCHAR}, #{jhF2,jdbcType=VARCHAR}, #{xlhF2,jdbcType=VARCHAR}, 
			      #{jhJc,jdbcType=VARCHAR}, #{xlhJc,jdbcType=VARCHAR}, #{jhWdg,jdbcType=VARCHAR}, 
			      #{xlhWdg,jdbcType=VARCHAR}, #{jhSsd,jdbcType=VARCHAR}, #{xlhSsd,jdbcType=VARCHAR}, 
			      #{avFxr,jdbcType=VARCHAR}, #{avZzh,jdbcType=VARCHAR}, #{meFxr,jdbcType=VARCHAR}, 
			      #{meZzh,jdbcType=VARCHAR}, #{jzshrk,jdbcType=VARCHAR})
    </insert>
    
    <!-- 删除飞行履历-调整值 -->
    <update id="deleteAdjust" parameterType="com.eray.thjw.flightdata.po.FlightRecord">
		     update b_s_00601 set zt = 0
		     where fxjldid = #{fxjldid,jdbcType=VARCHAR} and xdbs = 1
	</update>
</mapper>